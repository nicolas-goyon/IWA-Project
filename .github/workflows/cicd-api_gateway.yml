name: API_GATEWAY CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  JAVA_VERSION: '21'
  PROJECT_PATH: api_gateway
  MICROSERVICE_NAME: api_gateway

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: run docker-compose of db and tests
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml up --build tests || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.MICROSERVICE_NAME }}-tests-reports
        path: ${{ env.PROJECT_PATH }}/reports

    - name: Clean up
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml down

  build-app:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: build app
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml build app

    - name: Tag Docker images
      run: |
        docker tag app ${{ env.MICROSERVICE_NAME }}-app:build

    - name: Save Docker images
      run: |
        docker save ${{ env.MICROSERVICE_NAME }}-app:build -o ${{ env.MICROSERVICE_NAME }}-app-image.tar

    - name: Upload Docker images as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.MICROSERVICE_NAME }}-app-image
        path: ${{ env.MICROSERVICE_NAME }}-app-image.tar
        if-no-files-found: error

  push-app:
    runs-on: ubuntu-22.04
    needs: [build-app, build-and-test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Download App Docker images
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.MICROSERVICE_NAME }}-app-image

    - name: Load Docker images
      run: |
        docker load -i ${{ env.MICROSERVICE_NAME }}-app-image.tar

    - name: Push Docker images to GitHub Container Registry
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # Push the application image
        docker push ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-app:latest