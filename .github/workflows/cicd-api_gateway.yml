name: API_GATEWAY CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_run:
      workflows: 
      - MS_USER CI/CD Pipeline
      - MS_RESERVATION CI/CD Pipeline
      - MS_LOCATION CI/CD Pipeline
      - MS_NOTIFICATION CI/CD Pipeline
      branches:
      - main
      types:
      - completed
env:
  JAVA_VERSION: '21'
  PROJECT_PATH: api_gateway
  MICROSERVICE_NAME: api_gateway

jobs:
  wait-for-workflow-user:
    runs-on: ubuntu-latest
    steps:
    - name: Wait for Workflow Action
      uses: kamilchodola/wait-for-workflow-action@1.1.0
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        workflow_id: "cicd-ms-user.yml"
        max_wait_minutes: 10
        interval: 10
        timeout: 600
        org_name: ${{ github.repository_owner }}
        repo_name: ${{ github.event.repository.name }}
        ref: ${{ github.ref }}


  build-and-test:
    runs-on: ubuntu-latest
    # Depends on : "on-success" job of all microservices
    needs: wait-for-workflow-user

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Create a network
      run: docker network create iwa_network 

    - name: run docker-compose of db and tests
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml up --build tests

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.MICROSERVICE_NAME }}-tests-reports
        path: ${{ env.PROJECT_PATH }}/reports

    - name: Clean up
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml down

  build-and-push:
    runs-on: ubuntu-22.04
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build Docker images using Docker Compose
      run: |
        cd ${{ env.PROJECT_PATH }}
        docker-compose -f docker-compose.yml build app

    - name: Tag Docker images
      run: |
        docker tag app ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-app:latest

    - name: Push Docker images to GitHub Container Registry
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # Push the application image
        docker push ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-app:latest