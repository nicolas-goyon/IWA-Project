name: MS_LOCATION CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  JAVA_VERSION: '21'
  PROJECT_PATH: ms_location
  MICROSERVICE_NAME: ms_location

jobs:
    build-and-test:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
  
      - name: Create a network
        run: docker network create iwa_network

      - name: run docker-compose of db and tests
        run: |
            cd ${{ env.PROJECT_PATH }}
            docker-compose -f docker-compose.yml up -d --build db
            docker-compose -f docker-compose.yml up --build --exit-code-from tests tests

      - name: Wait for tests to finish
        run: |
          cd ${{ env.PROJECT_PATH }}
          docker-compose -f docker-compose.yml logs -f tests

      - name: Log the database container
        run: |
          cd ${{ env.PROJECT_PATH }}
          docker-compose -f docker-compose.yml logs db

      - name: List files in ./reports depth = 2
        run: |
          cd ${{ env.PROJECT_PATH }}
          ls -R ./reports

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MICROSERVICE_NAME }}-tests-reports
          path: ${{ env.PROJECT_PATH }}/reports

      - name: Clean up
        run: |
          cd ${{ env.PROJECT_PATH }}
          docker-compose -f docker-compose.yml down

    build-and-push:
      runs-on: ubuntu-22.04
      needs: build-and-test
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
  
      - name: Build Docker images using Docker Compose
        run: |
          cd ${{ env.PROJECT_PATH }}
          docker-compose -f docker-compose.yml build app
          docker-compose -f docker-compose.yml build db 
  
      - name: Tag Docker images
        run: |
          docker images
          docker tag ${{ env.MICROSERVICE_NAME }}_app ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-app:latest
          docker tag ${{ env.MICROSERVICE_NAME }}_db ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-db:latest
  
      - name: Push Docker images to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-app:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.MICROSERVICE_NAME }}-db:latest