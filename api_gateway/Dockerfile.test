# Use an official OpenJDK runtime as a parent image
FROM docker.io/nicolasgoyon/run_spring_tests

# Set the working directory in the container
WORKDIR /app

ARG JWT_SECRET
ARG PROJECT_PATH
ARG JAVA_VERSION
ARG MICROSERVICE_NAME
ARG USERS_SERVICE_URI
ARG AUTH_ROUTE_URI
ARG LOCATIONS_SERVICE_URI
ARG CATEGORY_SERVICE_URI
ARG RESERVATION_SERVICE_URI
ARG REVIEW_SERVICE_URI
ARG NOTIFICATION_SERVICE_URI

ENV JWT_SECRET=${JWT_SECRET}
ENV JAVA_VERSION=${JAVA_VERSION}
ENV PROJECT_PATH=${PROJECT_PATH}
ENV MICROSERVICE_NAME=${MICROSERVICE_NAME}
ENV USERS_SERVICE_URI=${USERS_SERVICE_URI}
ENV AUTH_ROUTE_URI=${AUTH_ROUTE_URI}
ENV LOCATIONS_SERVICE_URI=${LOCATIONS_SERVICE_URI}
ENV CATEGORY_SERVICE_URI=${CATEGORY_SERVICE_URI}
ENV RESERVATION_SERVICE_URI=${RESERVATION_SERVICE_URI}
ENV REVIEW_SERVICE_URI=${REVIEW_SERVICE_URI}
ENV NOTIFICATION_SERVICE_URI=${NOTIFICATION_SERVICE_URI}


# Define build path to ./
ARG PROJECT_PATH=./
# Copy the build.gradle and settings.gradle files
COPY ${PROJECT_PATH}/build.gradle.kts ${PROJECT_PATH}/settings.gradle.kts ${PROJECT_PATH}/gradlew ${PROJECT_PATH}/gradlew.bat ./

# Copy the source code
COPY ${PROJECT_PATH}/src ./src

# Copy the gradle directory
COPY ${PROJECT_PATH}/gradle ./gradle

# Set the permissions for the directory
RUN chmod -R 777 /app
